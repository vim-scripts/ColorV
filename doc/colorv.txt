*colorv.txt* *colorv*         ColorV         A Color tool in Vim
 

              _________     ______            ___    __               ~
              __  ____/________  /______________ |  / /               ~
              _  /    _  __ \_  /_  __ \_  ___/_ | / /                ~
              / /___  / /_/ /  / / /_/ /  /   __ |/ /                 ~
              \____/  \____//_/  \____//_/    _____/                  ~
                                                                      ~
                             Ver:2.5                                  ~
                                
==============================================================================

 CONTENTS                               *colorv-contents*

 DESCRIPTION                            *colorv-description*
 1. Intro                               |colorv-intro|
 2. Install                             |colorv-install|
 3. Usage                               |colorv-usage|

 ADVANCED                               *colorv_advanced*
 4. Colorinfo                           |colorv-colorinfo|
 5. Mappings                            |colorv-mappings|
 6. Commands                            |colorv-commands|
 7. Options                             |colorv-options|
 8. Variables                           |colorv-variables|
 9. Functions                           |colorv-functions|
 
 CREDITS                                *colorv-credits*
 10. Developer                          |colorv-developer|
 11. Changelog                          |colorv-changelog|
 12. License                            |colorv-license|
==============================================================================
INTRO                                               *colorv-intro*

    *ColorV* is a Color tool in Vim.

    With it you can:
        Choose, Change, Show, Preview, Generate, Pickup, Cache ... colors.

    To Start: 
        :ColorV
------------------------------------------------------------------------------
QUICKSTART                                               *colorv-quickstart*

    Quick Start~

    Open ColorV window to choose colors. 
        <leader>c1/cm  or :ColorVmin    min mode:Less Space.
        <leader>c2     or :ColorVmid    mid mode:Normal.
        <leader>c3/cx  or :ColorVmax    max mode:More Info.
        <leader>cv     or :ColorV       ColorV with previous mode.

    NOTE    Mappings may not exist if it has been taken.  
            Then you should redefine it in your vimrc.

    Choose a color in ColorV window.~
        Move the cursor around in the pallette.  press <Enter>
        The color will changed to the color you choose.

    Edit Hue property of the color.~
        Move cursor to the property 'H: 50'. press <Enter>.
        Input a number. The color will change by your input.

    Get W3C standard colornames list.~
        <leader>cl
        This will open a name list window that showing the colornames.

    Open ColorV window with color-text under cursor to get it's info.~
        <leader>cw

        Color-Text: #ff9744 rgb(33,44,155) OrangeRed 'cadetblue'

        Put your cursor on the word 'rgb(33,44,155)' and press <leader>cw.
        ColorV is opend with it's color.

    Easily change color-text under cursor with choosing color.~
        <leader>ce

        Put your cursor on the word 'rgb(33,44,155)' and press <leader>ce.
        Then choose a color and Close the window by pressing "q". 
        You will see the word is changed with the choosed color.
        Also you can try with 'cadetblue' 'hsl(50,30%,47%)'...
    
    Generate 'Hue' (and more) colorscheme List with color-text.~
        <leader>cg1 or g1 in ColorV window

    Copy the color in the ColorV window directly.~
        cc/<Ctrl-C>/yy

    Paste a color-text to ColorV window to get it's info.~
        p/<Ctrl-V>
    
    Preview all color-text in current file with highlighting in it's color.~
        <leader>cpp
        (200 line max each time)

    Use pyGTK colorpicker to pick colors on screen easily.~
        <leader>cd
        ('+python' compiled and pygtk2.0 included)

    Have further tour. Goto |colorv-usage| section.

------------------------------------------------------------------------------
NEWS IN 2.5                                         *colorv-news-2.5*
+ Faster~
    Core function optimized and rewrited with python.
    10+ times Faster than previous version.
    (Normal mode:GUI runtime <0.06s, TERM runtime <0.10s)
+ New Mode~
    Max mode ('<leader>cx') added, and show more infos(RGB/HSV/HLS/YIQ).
    With copied color history, which tracks color copied from ColorV.
+ New Space~
    'HLS' added for choosing colors in HLS colorspace.
    Use it by set "g:ColorV_win_space" to "hls"
+ With Term~
    Now ColorV works under Terminal(both 8/16/256 colors).   
    Set your '&t_Co' option (Default:8), if it supports more colors.

+ New in 2.5.1~
    Auto preview css files.(g:ColorV_prev_css)
+ New in 2.5.2~
    Fix some bugs in mac/windows/terminal.
+ New in 2.5.3~
    add |g:ColorV_global_leader| and |g:ColorV_no_global_map|
+ New in 2.5.4 Spring Festival release~
    Cleaning and tuning. 
    Better support for Galaxy.vim
    infoline status showing
            
==============================================================================
INSTALL                                             *colorv-install*

1.Using [Vundle.vim](Recommend):~

    https://github.com/gmarik/vundle
    After it's installed and configured.
    Add this line to your vimrc 
    `Bundle 'Rykka/ColorV'` 
    Install it by 
    `:BundleInstall`

    And Update it simply by
    `:BundleInstall!`
 
2.Using [ColorV on Vim.org]~
 
    http://www.vim.org/scripts/script.php?script_id=3597
    Download the file of latest version, 
    Extract to $VIMFILE folder. 
    ("~/.vim" for linux. "$HOME/vimfiles" for windows)
    Generate helptags 
    `:helptags ~/.vim/doc
 
    NOTE   You can always get the latest version at
           https://github.com/Rykka/ColorV/
           And you can report bugs and suggestions at
           https://github.com/Rykka/ColorV/issues

    NOTE   If you got troubles, check ':h colorv-troubleshooting' first.
------------------------------------------------------------------------------
TROUBLESHOOTING                                 *colorv-troubleshooting*

    NOTE   If your vim is not compiled with 'python' (python2.x) 
           Or you OS have no python2.x installed.
           Then it may be 3~5 times slower.

    NOTE   If it got bugs. 
           First get the latest ColorV version.
           https://github.com/Rykka/ColorV

           Check if your vim version >=7.3
            ':ve'
           Check if your python version =2.7
            ':py import sys'
            ':py print sys.version'

    NOTE   If ColorV still got bugs with python. 
           use 'let g:ColorV_no_python=1' to stop using python.

    NOTE   The ArchLinux's gvim is not well compiled with 'gtk' library,
           To use eyedropper '<leader>cd' in ArchLinux. you should recompile 
           gvim yourself.
           Don't forget to link python with python2 before compile.
           'ln -s python2 python'

    NOTE   If you can't solve the trouble.
           Please report it at https://github.com/Rykka/ColorV/issues . 

==============================================================================
USAGE                                               *colorv-usage*

                                                    *colorv-usage-window*
    Open the ColorV Window:~
    <Leader>cv
    It uses the previous opened mode. 
    Use 'm/M' to change the mode.
                                                    *colorv-min*
    Min mode~
    Use <leader>cm/c1 or |:ColorVmin| to open it.
                                                    *colorv-mid*
    Mid mode~
    Use |:ColorVmid|
    Use <leader>c2 or |:ColorVmid| to open it.
                                                    *colorv-max*
    Max mode~
    Use <leader>cx/c3 or |:ColorVmax| to open it.
    Shows more infos and the copied history.
    The history is cached on your disk.
    You can set it to another place by changing |g:ColorV_cache_File|.

                                                   *colorv-usage-pallette*
    Choose a color in the pallette:~
    Using h/j/k/l and other motion mappings to go around.
    Using <c-k>/<space>/<enter> to choose color.
    Or doubleclick it with mouse.

                                                   *colorv-usage-infoline*
    Some help tips and ColorV stats~
    In max and mid mode.
    The info line in the bottom shows tips and can be clicked.
    The H/Y V/L M/m TEXT in the right cornder indicate the status.
    H/Y     |g:ColorV_gen_space|   'hsv' or 'yiq'
    V/L     |g:ColorV_win_space|   'hsv' or 'hls'
    M/m     Current Window mode.

                                                    *colorv-usage-edit*
    Edit the color in Hex/RGB/HSV/HSL/YIQ:~
    Move cursor to the property you want to edit.
    Using <Enter>/<kEnter> to edit the value. 
    Notice the input tips.
    You can also use '+/-' to tune it's value directlly.

                                                    *colorv-usage-copy*
    Copy the color in ColorV window:~
    using 'y/Y'  to copy 'HEX' into register"
    using 'cc/C' to copy 'HEX' into register+
    See |colorv-mapping-copy| for detail mapping.

                                                    *colorv-usage-paste*
    Paste a color to ColorV window:~
    Paste a |colorv-color-text| to ColorV and showing it's info.
    Using 'p' to paste text in register" to the window.
    Using <c-v> to paste text in register+ to the window.
    The color text could be HEX , RGB ,RGB% and RGBA.

                                                    *colorv-usage-word*
    Open ColorV with color-text under cursor:~
    You can open ColorV window with word under cursor.
    Using <leader>cw or with command |:ColorVword|

    And you can set the word auto changed with the chosen color after
    close the ColorV window .
    Using <leader>ce or with command |:ColorVsub|

    And More, you can change all the same color word in current buffer with it.
    Using <leader>ca or with command |:ColorVsuball|


                                                    *colorv-usage-eyedropper*
    Open ColorV with eyedropper:~
    Requires +python and pygtk2
    Using <leader>cd or command |:ColorVdropper|
                                                    *colorv-usage-namelist*
    Open colorname list window:~
    <leader>cl
    You can get W3C and X11 colorname and 'HEX' here.

                                                    *colorv-usage-generate*
    Generate color list:~
    See |colorv-generate| for scheme type details.
    See mappping |colorv-mapping-generate|. 
    See command |:ColorVgenerate| 

                                                    *colorv-usage-preview*
    Preview color text in current buffer:~
    <leader>cpp or command |:ColorVview|. 
    Now it only preview 200 lines each time.

    <leader>cpl to preview in current line. 
    This is much faster.

    <leader>cpb to preview in current file with  text-blocking.
    This is much clearer.

    <leader>cpc to clear all previewed colors.

    Set |g:ColorV_prev_css| to auto preview "*.css" files.
     
==============================================================================
COLORINFO                                            *colorv-colorinfo*
    
    This section is the information about colors.~
                                                     *colorv-colorname*
    The colorname are the the name of the colors, like 'red', 'green', 
    'blue', 'OrangeRed', 'cornsilk' 

    ColorV contains two types of names: X11 and W3C. 
    They have few difference.
    Note  The X11 standard is used by vim and X Window system.
          The W3C standard is mostly used in HTML/CSS and browsers.
    
    There are several color names that have the same Hex.
        Aqua            #00ffff
        Cyan            #00ffff
        Magenta         #ff00ff
        Fuchsia         #ff00ff

    There are several clashes between X11 and W3C colornames.
        Gray    (X11)	#BEBEBE
        Gray    (W3C) 	#7F7F7F
        Green   (X11) 	#00FF00
        Green   (W3C) 	#007F00
        Maroon  (X11) 	#B03060
        Maroon  (W3C) 	#7F0000
        Purple  (X11) 	#A020F0
        Purple  (W3C) 	#7F007F
    You can get the name table from
    http://en.wikipedia.org/wiki/X11_color_names
    
    Note
    By default, As the vim highlighting uses the X11 colornames.
    when using |:ColorVsub| in '*.vim' files, 
    ColorV will automatically use X11 color names. 
    But the name showing in ColorV window is always W3C color name.
    You can entering X11 name by 'nx' and W3C name by 'ne'.
------------------------------------------------------------------------------
                                                    *colorv-color-text*
    The formats of color-text.~
    It is used when coping/pasting/reading color-texts.
    There are following formats currently:
    NS6     #ffffff     (short for Number Sign 6)
    NS3     #fff
    HEX0    0xffffff
    HEX     ffffff
    RGB     rgb(255,255,255)        (css1 standard)
    RGBP    rgb(100%,100%,100%)
    RGBA    rgba(255,255,255,1.0)   (css2 standard)
    RGBAP   rgba(100%,100%,100%,1.0) 
    NAME    red/lime/blue (see |colorv-colorname|)
    HSV     hsv(360,100,100)
    HSL     hsl(300,100%,100%)      (css3 standard)
    HSLA    hsl(300,100%,100%,1.0)  (css3 standard)
    CMYK    cmyk(1.00,1.00,1.00,1.00) 

    You can also define your own color formats with |colorv-var-colors|.
------------------------------------------------------------------------------
                                                      *colorv-generate*
    Types for generating color list.~
    There are following {type} currently:
        Hue/Saturation/Value        Generate by H/S/V  h/s/v+{step}
        Monochromatic               Generate by S and V s/v+{step}
        Analogous                   Generate colors h+15
        Triadic                     Generate 3 colors 
        Rectangle(Tetradic)         Generate 4 colors 
        Neutral                     Generate colors h+30
        Clash                       Generate 3 clash color 
        Square                      Generate 4 colors h+90
        Five-Tone                   Generate 5 colors 
        Six-Tone                    Generate 6 colors 
        Complementary               Generate opposite color h+180
        Split-Complementary         Generate 2 opposite colors
        Luma                        Generate by Luma+{step} ('yiq' only)

    NOTE
    Same S and V in HSV and HLS colors space don't result same lumination.
    e.g:
    Blue(0000ff) and Yellow(ffff00) both '100' in S and V
    but the lumination differs obviously.
    Their Y(luma) in YIQ colorspace are '89'(yellow) and '11'(blue)

    See YIQ http://en.wikipedia.org/wiki/YIQ
    With |g:ColorV_gen_space| set to 'yiq'. 
    You could get colors with same 'Lumination'. 
    The disadvantage is generated colors 'Hue' Scope decreased.
    
    Below is ColorV list generate in "Hue" on BLue and Yellow.
    Using :ColorVview (<leader>cpp) to have a clear view.
        HSV                YIQ (Blue)          YIQ (Yellow)
        #4000FF            #2C00EB             #D3FF14 
        #8000FF            #5A00DB             #A7FF28
        #BF00FF            #8600C7             #79FF38
        #FF00FF            #B300B3             #4CFF4C
        #FF00BF            #B90079             #46FF86
        #FF0080            #C10043             #3FFFC0
        #FF0040            #C80009             #37FFF6
        #FF0000            #CF0000             #30FFFF
        #FF4000            #A90000             #56FFFF
        #FF8000            #830400             #7CFBFF
        #FFBF00            #5E1E00             #A1E1FF
        #FFFF00            #383800             #C7C7FF
        #BFFF00            #0C4B00             #F3B4FF
        #80FF00            #005E00             #FFA0FF
        #40FF00            #007200             #FF8DFF
        #00FF00            #008500             #FF7AFF
        #00FF40            #007D00             #FF82FF
        #00FF80            #007600             #FF88FF
        #00FFBF            #00702F             #FF8FD0
        #00FFFF            #006969             #FF9696
    

==============================================================================
MAPPINGS                                            *colorv-mappings*
    
    Global Mappins.~
    
    All global mappings start with '<leader>c' , 
    you can change it with |g:ColorV_global_leader|
    For example, you can set it to '<leader>f',
    then you can open ColorV window by '<leader>fv'
    Further more, you can redefine each mapping with each command.
    
    And if you don't want any global mappings at all.
    set |g:ColorV_no_global_map| to 1

    NOTE  If other plugins have alredy taken the mapping. 
          It doesn't exists. Then you should redfine it In your vimrc.


                                                    *colorv-mapping-global*

    <leader>cv      Open ColorV normal window.
                    Redefine it with :ColorV<CR>

    <leader>cm      Open ColorV mini window.
                    Redefine it with :ColorVmini<CR>

    <leader>cw      Open ColorV window with cursor word <cWORD>.
                    the word could be the pattern of |colorv-color-text| .
                    Redefine it with :ColorVword<CR>

    <leader>ce      Open ColorV window with cursor word and change it later.
                    Redefine it with :ColorVsub<CR>

    <leader>ca      Open ColorV normal with cursor word and change all later.
                    Redefine it with :ColorVsubALL<CR>

    <leader>c2x     Change cursor word to HEX format later.
    <leader>c2r     Change cursor word to RGB format later.
    <leader>c2p     Change cursor word to RGBP format later.
    <leader>c2n     Change cursor word to NAME format later.
    <leader>c2#     Change cursor word to NS6 format later.
    <leader>c2s     Change cursor word to NS6 format later.
    <leader>c2h     Change cursor word to HSV format later.
    <leader>c2m     Change cursor word to CMYK format later.
                    See details in |colorv-color-text|

    <leader>cl      Open colorname list window.

    <leader>cq      Quit ColorV.

                                                    *colorv-mapping-generate*
    Generate color list with current word by matching type.
    <leader>cgh    Hue
    <leader>cgs    Saturation
    <leader>cgv    Value
    <leader>cga    Analogous
    <leader>cgn    Neutral
    <leader>cgc    Clash
    <leader>cgp    Split-Complementary
    <leader>cgq    Square
    <leader>cg1/m  Monochromatic
    <leader>cg2    Complementary
    <leader>cg3/t  Triadic
    <leader>cg4    Rectangle(Tetradic)
    <leader>cg5    Five-Tone
    <leader>cg6    Six-Tone
    See |colorv-generate| for details.

                                                    *colorv-mapping-preview*
    <leader>cpp    Preview all color text in current 'file' with highlighting 
                   colors. |:ColorVview|
    <leader>cpl    Preview all color text in current 'line' with highlighting
                   colors. |:ColorVviewline|
    <leader>cpb    Preview all color text in current 'file' with highlighting
                   colors. |:ColorVviewblock|
                   (Block showing color text, which will be clearer for
                   checking colors.)
    <leader>cpc    clear preview highlighting. |:ColorVclear|
    Set |g:ColorV_view_name| and |g:ColorV_view_block| to change it's behavior. 

------------------------------------------------------------------------------

                                                    *colorv-mapping-buffer*

    Mappings that only IN ColorV window.~

                                                    *colorv-mapping-toggle*
    m/M         toggle ColorV window modes (max/mid/min)

                                                    *colorv-mapping-copy*

    Y/yy        Copy HEX format 'ffffff' into register"
    ys/y#       Copy NS6 format '#ffffff' into register"
    yx          Copy HEX0 plain '0xffffff' into register"
    yr          Copy RGB format 'rgb(255,255,255)' into register"
    yp          Copy RGBP format 'rgb(100%,100%,100%)' into register"
    yaa         Copy RGBA format 'rgba(255,255,255,255)' into register"
    yap         Copy RGBAP format 'rgba(100%,100%,100%.100%)' into register"
    yn          Copy NAM format 'white' into register"
    yh          Copy HSV format 'hsv(360,100,100)' into register"
    yl          Copy HSV format 'hsl(360,100,100)' into register"
    ym          Copy CMYK format 'cmyk(1.00,1.00,1.001.00)' into register"

    C/cc        Copy HEX format 'ffffff' into register+
    cs/c#       Copy NS6 format '#ffffff' into register+
    cx          Copy HEX0 plain '0xffffff' into register+
    cr          Copy RGB format 'rgb(255,255,255)' into register+
    cp          Copy RGBP format 'rgb(100%,100%,100%)' into register+
    caa         Copy RGBA format 'rgba(255,255,255,255)' into register+
    cap         Copy RGBAP format 'rgba(100%,100%,100%.100%)' into register+
    cn          Copy NAM format 'white' into register+
    ch          opy HSV format 'hsv(360,100,100)' into register+
    cl          Copy HSV format 'hsl(360,100,100)' into register+
    cm          Copy CMYK format 'cmyk(1.00,1.00,1.001.00)' into register+

    NOTE    The register" (|quotequote|) is Unnamed register used with 
            the "d", "c", "s", "x" commands or copied with the yank "y" 
            command, regardless of whether or not a specific register was 
            used (e.g.  "xdd).
            you can use 'p' to put in vim.

            The register+ (|quoteplus|) is CLIPBOARD register (in default 
            option), which could be used with cut/copy between other
            applications.
            you can use <Ctrl-V> to put it to other applications.


                                                    *colorv-mapping-paste*
    <Ctrl-v>    paste |colorv-color-text| in register+ to ColorV.
    p/P         paste |colorv-color-text| in register" to ColorV.

                                                    *colorv-mapping-set*
    <C-K>/<C-J>     Choose current showing colors under cursor.
    <2-Space>       Choose current showing colors under cursor.
    <2-Leftmouse>   Choose current showing colors under cursor.
                                                    *colorv-mapping-edit*
    <Enter>         Start editing RGB/HSV property chosen
    <Kenter>        Start editing RGB/HSV property chosen
    +=/-_           Tuning RGB/HSV property chosen
    <ScrollWheelUp>
    /<ScrollWheelDown>
    
    na/ne           Choose color by entering a colorname.(W3C standard)   
    nx              Choose color by entering a colorname.(X11 standard)   
                    See |colorv-colorname| for details.


                                                    *colorv-mapping-help*
    ?               Show tips.
    H/<F1>          Show help document.

                                                    *colorv-mapping-quit*
    q/Q             Quit ColorV.
    <c-w>q          Quit ColorV.
    <c-w><c-q>      Quit ColorV.

                                                    *colorv-buffer-generate*
    Generate color list with current HEX in ColorV window.
    g1/h    Hue
    gs    Saturation
    gv    Value
    ga    Analogous
    gn    Neutral
    gc    Clash
    gp    Split-Complementary
    gq    Square
    gm  Monochromatic
    g2    Complementary
    g3/t  Triadic
    g4    Rectangle(Tetradic)
    g5    Five-Tone
    g6    Six-Tone

    See |colorv-generate| for details.

==============================================================================
COMMANDS                                            *colorv-commands*

                                                    *:ColorV*
    |:ColorV| [{text}]       Open ColorV window with previous mode.

                                                    *:ColorVmid*
    |:ColorVmid| [{text}]    Open |colorv-mid| window.
                                                    *:ColorVmin*
    |:ColorVmin| [{text}]    Open |colorv-min| window.
                         This mode is mini mode.
                         But still you can choose colors easily.
                                                    *:ColorVmax*
    |:ColorVmax| [{text}]    Open |colorv-max| window.
                         This mode contains more infos.
                         The YIQ/HLS color space,
                         and the copied_color_history pallette.
    
    See |colorv-color-text| to get {text} for above commands.

                                                    *:ColorVword*
    |:ColorVword|     Open the ColorV window with word under cursor.
                    the word could be in |colorv-color-text| .
                                                    *:ColorVsub*
    |:ColorVsub|     Open the ColorV window with word under cursor. And
will change the color-text after closing the ColorV window.

                                                    *:ColorVsuball*
    |:ColorVsuball|  Open the ColorV window with word under cursor. And
will change all color-text in current buf after closing the ColorV window.
    
                                                    *:ColorVsub2*
    |:ColorVsub2| {args}
                      Open the ColorV window with word under cursor. And
                      Change to the format later.
                      {args}: (NAME\HEX\RGB\0x\RGBA...) 
                      See details of {args} in |colorv-color-text|

                                                    *:ColorVdropper*
    |:ColorVdropper|    Open a gtk colorpicker to drop colors.
                      Requires +python and pygtk2

                                                    *:ColorVclear*
    |:ColorVclear|      In case that you mess up other buffers with ColorV.
                      Use this.

                                                    *:ColoVpreview*
    |:ColorVview|       preview color texts in current buffer.

                                                    *:ColorVquit*
    |:ColorVquit|       Quit ColorV
==============================================================================
OPTIONS                                             *colorv-options*

                                                *g:ColorV_win_space*
                                                (default="hsv")
    g:ColorV_win_space      ColorV's Main showing color space.
                            if set to 'hls'.
                            The pallette/text will use 'HLS' colorspace.

                            It's status will be show at the right corner
                            V:'hsv' L:'hls'
                            NOTE: the 'HLS' is the same thing of 'HSL'

                                                *g:ColorV_gen_space*
                                                (default="hsv")
    g:ColorV_gen_space      Generated color with colorspace.
                            if set to 'yiq'.
                            You could get colors with same 'Lumination'. 

                            It's status will be show at the right corner
                            H:'hsv' Y:'yiq'

                                                *g:ColorV_win_pos*
                                                (default="bot")
    g:ColorV_win_pos        Default ColorV window position.
                            You could use "top" instead.


                                                *g:ColorV_view_name*
                                                (default=1)
    g:ColorV_view_name      Show colorname when previewing color.
                            If you don't want to make the colorname text
                            like 'red', 'black', 'navy' to be colored.
                            set it to 0

                                                *g:ColorV_view_block*
                                                (default=0)
    g:ColorV_view_block     Always Previewing color-text with same fg/bg 
                            colors.

                                                *g:ColorV_prev_css*
                                            (if has("python":default=1 ))
    g:ColorV_prev_css       Auto Preview color-text in *.css files.
                            Auto update view after write file.

                                                *g:ColorV_cache_File*
                                            (default='$HOME/.vim_colorv_cache')
    g:ColorV_cache_File     The copied_history_list's cache file position.


                                                *g:ColorV_global_leader*
                                                (default='<leader>c')
    g:ColorV_global_leader  The leader for your gloabl mapping.

                                                *g:ColorV_no_global_map*
                                                (default=0)
    g:ColorV_no_global_map  No global mapping will be defined.

                                                *g:ColorV_debug*
                                                (default=0)
    g:ColorV_debug          Debug mode.
                                                *g:ColorV_no_python*
                                                (default=0)
    g:ColorV_no_python      No Python!
------------------------------------------------------------------------------
VIMRC EXAMPLE                                       *colorv-example*

    If you want make the ColorV work fine for you.
    You can set |colorv-options| and remapping |colorv-mappings| in your
    vimrc files.
    For example:
>
    " define your own global leader for ColorV insead for '<leader>c'
    "let g:ColorV_global_leader= '<leader>f'
    " define your mapping for change color-text
    nmap <silent> <leader>cr :ColorVsub<CR>

    " ColorV window position "bot" or "top"
    "let g:ColorV_win_pos="top"  
    " Use HLS colorspace instead of HSV
    "let g:ColorV_win_space="hls"  
    " Use YIQ colorspace for generating color list
    "let g:ColorV_gen_space="yiq" 
    " Stop coloring colornames like 'Black','Navy','white'
    "let g:ColorV_view_name=0
    " No Auto preview for css files
    "let g:ColorV_prev_css=0

    " you can add auto preview for the filetype you want to highlight
    aug preview_file
        au!  BufWinEnter *.html call colorv#preview()
        au!  bufwritepost *.html call colorv#preview()
    aug END

<                    
==============================================================================
VARIABLES                                           *colorv-variables*

    Global variables that could be used by your scripts.~
    g:ColorV        The |dict| that keeps all ColorV global variables.
    g:ColorV.ver    The Current ColorV version.

                                                    *colorv-var-colors*
    g:ColorV.HEX    The plain hex format (ffffff) of current color.

    g:ColorV.rgb    list [r,g,b] (0~255)
    g:ColorV.RGB    The dict that keeps the RGB value.
                    'g:ColorV.RGB.R' (0~255)
                    'g:ColorV.RGB.G' (0~255)
                    'g:ColorV.RGB.B' (0~255)

    g:ColorV.hsv    list [h,s,v] (0~360) (0~100) (0~100)
    g:ColorV.HSV    The dict that keeps the HSV value.
                    'g:ColorV.HSV.H' (0~360)
                    'g:ColorV.HSV.S' (0~100)
                    'g:ColorV.HSV.V' (0~100)
    
    g:ColorV.hls    list [h,l,s] (0~360) (0~100) (0~100)
    g:ColorV.hsl    list [h,s,l] (0~360) (0~100) (0~100)
    g:ColorV.HLS    The dict that keeps the HSV value.
                    'g:ColorV.HLS.H' (0~360)
                    'g:ColorV.HLS.L' (0~100)
                    'g:ColorV.HLS.S' (0~100)
                    NOTE: 'HLS' colorspace is the same thing of 'HSL'.

    g:ColorV.yiq    list [y,i,q] (0~100) (-100~100) (-100~100)
    g:ColorV.YIQ    The dict that keeps the HSV value.
                    'g:ColorV.YIQ.Y'
                    'g:ColorV.YIQ.I'
                    'g:ColorV.YIQ.Q'

    g:ColorV.NAME   The colorname of current color.
                    if no exact color fitted then empty.


==============================================================================
FUNCTIONS                                           *colorv-functions*

    Global Functions that could be used by your scripts.~
    
                                                    *colorv#rgb2hsv()*
    colorv#rgb2hsv({rgb})             Convert RGB to HSV.
                                    " input [r,g,b] 0~255 num
                                    "return [H,S,V] 0~360 0~100 num
                                                    *colorv#hsv2rgb()*
    colorv#hsv2rgb({hsv})             Convert HSV to RGB.
                                    " input [h,s,v] 0~360 0~100 num
                                    "return [R,G,B] 0~255  num

                                                    *colorv#rgb2hex()*
    colorv#rgb2hex({rgb})             Convert RGB to HEX.
                                    " input [r,g,b]  0~255  num/str
                                    "return ffffff         str

                                    NOTE:In VIM ,string "255" could be used
                                    mostly the same as number '255'.
                                    But the string "ffffff" is not a number.
                                    You should convert it to "0xffffff" to
                                    use it as a number.
                                    try this to understand it clearly.
                                    :echo "ffffff"+1
                                    :echo "0xffffff"+1

                                                    *colorv#hex2rgb()*
    colorv#hex2rgb({hex})             Convert HEX to RGB.
                                    " input ffffff          num/str
                                    "return [r,g,b] 0~255  str

                                                    *colorv#hex2hsv()*
    colorv#hex2hsv({hex})             Convert HEX to HSV.
                                    " input ffffff          num/str
                                    "return [h,s,v] 0~360 0~100 num
                                                    *colorv#hsv2hex()*
    colorv#hsv2hex({hsv})             Convert HSV to HEX.
                                    " input [h,s,v] 0~360 0~100 num
                                    "return ffffff         str

                                                    *colorv#hex2hls()*
    colorv#hex2hls({hex})             Convert HEX to HLS.
                                    " input ffffff          num/str
                                    "return [h,l,s] 0~360 0~100 num
                                                    *colorv#hls2hex()*
    colorv#hls2hex({hsl})             Convert HLS to HEX.
                                    " input [h,l,s] 0~360 0~100 num
                                    "return ffffff         str

    And there are calculator functions which were rarely use.
        colorv#hex2yiq({hex}) (y:0~100,i:-100~100,q:-100~100)
        colorv#yiq2hex({yiq})
        colorv#rgb2cmyk({rgb}) (c:0~1,m:0~1,y:0~1,k:0~1)
        colorv#cmyk2rgb({cmyk})
------------------------------------------------------------------------------
                                                    *colorv#hex2term()*
    colorv#hex2term({hex}[,{mode}]) Output colornumber (0~256)
                                    for highlighting in vim 
                                    {mode} can be 8/16 or "CHECK" 
                                    
                                                    *colorv#gen_list()*
    colorv#list_gen({hex}[,{type}[,{num}[,{step}]]])             
                                    Generate hex list by color.
                                    "input  {hex}[,{type}[,{num}[,{step}]]]
                                    "return ["ffffff","ffffff",...]
                                    {hex} '000000'~'ffffff'
                                    {type} 'Hue','Value','Monochromatic'...
                                    {nums} Generated color numbers
                                    {step} the step between each color. 

                                                    *colorv#yiq_list_gen*
    colorv#yiq_list_gen({hex}[,{type}[,{num}[,{step}]]])             
                                    'yiq' version of colorv#list_gen
                                    "input  {hex}[,{type}[,{num}[,{step}]]]
                                    "return ["ffffff","ffffff",...]
                                    {hex} '000000'~'ffffff'
                                    {type} 'Hue','Value','Monochromatic'...
                                    {nums} Generated color numbers
                                    {step} the step between each color. 

                                    See details in |colorv-generate|.

==============================================================================
DEVELOPER                                             *colorv-developer*

    |ColorV| is develped by Rykka |<Rykka10(at)gmail.com>|.
   
    The reason why I wrote this plugin is because the ColorSel.vim
    does not support mouse, And wasn't so easy to choose one desired color.

    Also inspired by the Gpick software by Albertas Vyšniauskas.
    And the KULER software of Adobe.

    Thanks to many other plugin writers and persons.

        Shougo          NeoComplCache. Auto complete plugin that is great.
        David Necas     ColorSel. A RGB/HSV color selector.
        Lilyldjwg       Colorizer. An inline color previewer.
        Lilyldjwg       gui2term.py. A gui 2 term colorscheme generator.
        Fabien LOISON   color_picker. pygtk scripts.

        Vundle/Pathogen/Command-T/...and many other vim plugin authors.

    Very Thanks to the Vim Author and it's developers:
        Bram Moolenaar <Bram@vim.org>...
------------------------------------------------------------------------------
DEPENDENCIES                                        *colorv-dependencies*

    - Vim 7.0 or higher.
    - python 2.7 for the best. Other versions may have bugs.
    - pyGTK ColorPicker: Requires +python and pygtk2.0.
==============================================================================
CHANGELOG                                           *colorv-changelog* 

" 2.5.4 Spring Festival~
" DONE: 120120  add cmyk format.
" DONE: 120120  rewrite hex2term , more faster.
" DONE: 120120  clean and tuned most code.
" DONE: 120120  add <ScrollWheelUp> to  + and - value.
" DONE: 120119  clean preview functions , now max 200 line each time.

" 2.5.3~
"FIXED: 110911  stop using i in global namespace.
"FIXED: 110911  single color-list window now.
" DONE: 110907  add 'g:ColorV_global_leader' and 'g:ColorV_no_global_map'
"FIXED: 110907  rmv useless funcs. put cursor in list when opened.
"FIXED: 110907  changed ColorVchange to ColorVsub

" 2.5.2~
"FIXED: 110904  add force number cast in p: rgb2hex() to fix errors. 
"FIXED: 110904  wrong method of check buffers. 
"FIXED: 110904  optimize p: rgb2hex(). fix 0-length error for Mac vim.
"FIXED: 110904  new method of open_win(). fix errors on windows and terminal

" 2.5.1~
" DONE: 110902  add g:ColorV_prev_css to auto preview *.css files.
"FIXED: 110902  fix v: colorv#hls2rgb() wrong 'h' input range for calc. 
"FIXED: 110902  fix v: draw_pallette() wrong 'S' for hex error. 
"FIXED: 110902  fix v: v3_hex2term() error calculating.
" DONE: 110902  add glance image
" DONE: 110902  format hex2txt() output with '%3d'.
"FIXED: 110902  Change python regxp '\s' and '\\)' to '[ \t]' and '[)]'
                to fix the matching bug.
" DONE: 110901  add a:4 'circle' option for colorv#gen_list().
" DONE: 110901  add timer while previewing buffer
" DONE: 110831  Not to matchadd() duplicated word. 
                Not all word being highlighted: because same hex may be
                differe ptn. use ptn group as dict name instead.
" DONE: 110830  python version for preview() 

" 2.5.0 Faster and More~
" DONE: 110826  Stop change colorname if no relating colorname for to-color.
" DONE: 110826  preview highlight effect with buffers not clash.
" DONE: 110825  add colorv#rgb2cmyk() and colorv#cmyk2rgb()
" DONE: 110825  8/16 terminal ColorV window supportted
"FIXED: 110825  Missing '*' sometimes. 
                Cause the position of s:pal_H is changing.
" DONE: 110824  hls colorspace added
" DONE: 110824  draw history_copied_pallette in max mode
" DONE: 110824  history_copied_list cache supported
" DONE: 110824  remove useless options
" DONE: 110823  max mode added
" DONE: 110822  '+' for saturation line in 'min' mode
"FIXED: 110822  Error with cwd:"/" in terminal 
" DONE: 110821  rewrite core func with python.
" DONE: 110820  use YIQ instead of YUV.

" 2.4.0 yuv yiq colorspace list gen
"FIXED: 110819  wierd window error (new and exit.)
" DONE: 110818  terminal supported 
" DONE: 110817  remove the arrow selector method. use highlight instead
" DONE: 110815  YUV colorspace added
" DONE: 110815  YUV list gen supported

" 2.3.0 galaxy.vim
" DONE: 110814  draw multiple multi block
" DONE: 110814  support galaxy terminal color
" DONE: 110811  support for galaxy.vim to generate colorschemes

" 2.2.0
" DONE: 110809  add '+' sign in 'min' mode's pallette to show the saturation
" DONE: 110808  added exit_call and update_call for colorv#Win()
" DONE: 110806  terminal 16 color supported .
" DONE: 110806  s:fmod() for v:version <=702

" 2.1.0
" DONE: 110728 256 color terminal supported.
" DONE: 110727 colorv#hex2term() added.
" DONE: 110727 colorv#rgb2lab added.

" 2.0.4
"FIXED: 110624  s:generate_list use gen_list() inside


" 2.0.3
"FIXED: 110623  rmv func cursor_gen(). use change_cursor() instead.
"FIXED: 110622  When opening colorv#win(),always set to 'bottom'/'top'
"FIXED: 110622  preview word correctly in one WORD.
"FIXED: 110622  error of hex_list output idx
"FIXED: 110622  could not locate the rgb() in a WORD
"               bacause of [hex,.] in for loop mix up with hex
"               outside.
"FIXED: 110622  still may not the right position of color text
"               the cursor color text may not same with hex_list[0]
"FIXED: 110622  this :substitute may couse error if cursor is in center of
"               pat. because it's always find in line
"FIXED: 110622  rmv func open_word. use change_cursor() instead.
"FIXED: 110622  could not find the correct pos of change_pat
"FIXED: 110622  could not find >2 hex. copy()'s items are identical.
"               deepcopy() instead.
"FIXED: 110622  error of pat_idx in s:txt2hex() if more than one
" DONE: 110622  add mapping in colorv buffer to generator with current color
"FIXED: 110622  change fmt.HEX to exclude '0x'
" DONE: 110622  open_word() and change_cursor() will search line if nothing
                under cursor.

" 2.0.2.2
"FIXED: 110621  preview 'NS3','NS6'... followed by '\x\@!'

" 2.0.2.1
"FIXED: 110621  optimize s:txt2hex() with pat_fmt
"FIXED: 110621  rmv s:nam2hex() in check hex functions.
"FIXED: 110621  rmv highlighting color name in list window 

" 2.0.2 preivew
" DONE: 110620  preview with color names
" DONE: 110620  preview files and lines
"FIXED: 110620  preview rgba(255,255,255,1.0) format in css file
" DONE: 110620  support colornames in s:txt2hex() 
"FIXED: 110620  the star mark of pallette use s:rlt_clr()
" DONE: 110620  add hex2hsv() hsv2hex
" DONE: 110620  g:ColorV_xxx options and help docs added
"FIXED: 110620  fmod hsv2rgb() and rgb2hsv() rgb2hex() input with warning
" TODO: 110620  readme doc and image changed

" 2.0.1 generator
" DONE: 110620  generate with word under cursor
" DONE: 110620  generator with types (Analogous,Monochromatic,...)
" DONE: 110620  create generated list window
"FIXED: 110620  open list window with colorv window

" 2.0.0 list window~
" DONE: 110619  list window of color names.
" DONE: 110619  generate list with hue/sat/val
" DONE: 110619  generate list with colorscheme. 'analogous'...
"FIXED: 110619  fmod() with input of colorv#rgb2hsv() colorv#hsv2rgb()
"FIXED: 110619  help docs and map define of format 'HSV' ('ch/yh').

" 1.7.7
"FIXED: 110617  error of opening 'NS3' format '#fff'
" DONE: 110617  g:ColorV_uppercase=1 lowecase to uppercase 'FFFFFF'
" DONE: 110617  add format 'HSV' "hsv(360,100,100)"
"FIXED: 110617  change format "0xffffff" name to 'HEX0'

" 1.7.6
"FIXED: 110611  wrong substitute while change2 NAME with "#" because '~'
"FIXED: 110611  fix format name "#" which was invalid to 'NS6'.
"FIXED: 110611  change2 doesnt unlet with s:changing()
"FIXED: 110611  cursor word will include '#' format.
" DONE: 110611  add g:ColorV_win_pos 'top/bot'
"FIXED: 110611  now |:ColorVword| doesnt move cursor into ColorV window.
"FIXED: 110611  now |:ColorVsub| will move cursor back.
" DONE: 110611  add |:ColorVquit| and <leader>cq

" 1.7.0 change 2
" DONE: 110609  add mapping c2x c2n c2r c2# c2p
" DONE: 110609  add command |:ColorVsub2|
" DONE: 110609  add s:tune_colorname() and map nt
" DONE: 110609  optimize s:set_in_pos() arrow check part
" DONE: 110609  add flag color for colorname input

" 1.6.0 'N:' and horizontal
" DONE: 110607  hide text 'N:' by default
"FIXED: 110607  del C-A mapping
" DONE: 110607  add "N:" para with color name. 
" DONE: 110607  change 'min' mode para to be horizontalized
"FIXED: 110607  correct set position in history block 
"FIXED: 110607  support 000~fff for 'Hex' para input

" 1.5.0 '+' and '-'
"FIXED: 110606  use :bd in exit() instead :bw
"FIXED: 110606  update history_set in set_buf_hex()
" DONE: 110605  use '+' and '-' to add/subtract  RGB/HSV parameter. 
" DONE: 110605  don't put duplicated color into history 
" DONE: 110603  now &filetype will showing the min/mid/max state

" 1.4.0 'mid' mode 
"FIXED: 110603  s:echo() will escape with '"'
"FIXED: 110603  using option name g:ColorV_dynamic_hue 
" DONE: 110602  colorname interface description. ctrl-a to show texts.
"FIXED: 110602  rmv quit mark.rmv g:ColorV_show_quit. fix silent_set
" DONE: 110602  change tip text. add g:ColorV_echo_tips (0/1/2)
" DONE: 110602  change arrow_ptn color to reverse.
" DONE: 110602  fix the pallette. no black line and white column now. 
" DONE: 110602  add max/mid/min mode. default is mid mode
" DONE: 110602  tips only shows in cmdline now

" 1.3.0 X11
" DONE: 110601  X11 standard colorname support and used with &ft==vim
"FIXED: 110601  error star mark color while using history_block
" DONE: 110601  easy set color with hue/sat/val line
" DONE: 110601  add seq_echo with switching_tips
" DONE: 110601  update docs and README.md
"FIXED: 110531  rmv a:1 of change_word()
"FIXED: 110531  error range while set color with history block 
" DONE: 110531  edit colorname using <cword>
"FIXED: 110531  arrow hl error while switch from norm 2 mini

" 1.2.0 Color Name
" DONE: 110526  g:ColorV_name_approx g:ColorV.NAME
" DONE: 110526  precisely change current word without confirm
" DONE: 110526  Add Color name support (W3C standard).
" DONE: 110526  input color name in ColorV to choose color.
"FIXED: 110526  The paste error with colorname
" DONE: 110526  change intro
"FIXED: 110526  rmv <esc> to quit. add <c-w>q <c-w><c-q> to quit.

" 1.1.0
"FIXED: 110524  silent clear_text
" DONE: 110524  code review
" DONE: 110524  some eggs
" DONE: 110524  hex2nam() nam2hex() approx2()
" DONE: 110524  GTK color picker dropper()
" DONE: 110524  color name read and set approix color to colorname
" DONE: 110524  help doc/code clean.
" DONE: 110524  error edit input dont change color
" DONE: 110523  autoload/
"FIXED: 110523  change the word 'rgb(...)' use <cWORD>
" DONE: 110523  open/cursor word add with rgb()
"FIXED: 110522  bufnr() get wrong buf number if with [""]
"FIXED: 110522  clear carefully
" DONE: 110522  txt2hex() hex2txt()
" DONE: 110522  all in one interface of read text / output text
"FIXED: 110521  error output with only one channel in mini mode,
"FIXED: 110521  mini mode star
" DONE: 110521  use dynamic background with star mark
" DONE: 110521  Help Page -> docs
" DONE: 110521  Help Docs

"1.0.0 beta~
" DONE: 110521  After a long term of hard development,
                The |ColorV| 1.0 beta finally comes out!

"FIXED: 110520  error color toggling while set with pos in draw_SatLine
"FIXED: 110520  there could be error with pat=3
"FIXED: 110520  use block_rect to define range
"FIXED: 110520  precise position needed
"FIXED: 110520  line_sub if len(line) < pos+text ,then null
"FIXED: 110520  define key with precision
"FIXED: 110520  clear will lost the cursor pos
"FIXED: 110520  arrow no hl while in line 1
"FIXED: 110520  arrow hl disapear if use Edit
"FIXED: 110520  E806 using float as string
"FIXED: 110520  colorv#rgb2hex E805 using float as number
" DONE: 110520  when init jump to buffer opened before
" DONE: 110520  seperate with the init and edit function
" DONE: 110520  read rgb/rgba/rgb%/rgb%a text
" DONE: 110520  paste clipboard hex to update color
" DONE: 110520  go back to origin cursor position
" DONE: 110520  g:ColorV_silent_set
" DONE: 110520  g:ColorV_show_star
" DONE: 110520  dynamic hueline
" DONE: 110520  control register
" DONE: 110520  change with all the same color <key>
" DONE: 110520  add with mini mode
" DONE: 110520  a simpler window (MINI)
" DONE: 110520  Silently mapping
" DONE: 110520  Add with mini mode
" DONE: 110520  toggle tips with ?/h
" DONE: 110520  var integration in g:ColorV.dict
"0.8.0
"FIXED: 110519  toggle window to last window
"FIXED: 110519  error msg while not in the precise position
"FIXED: 110519  using the all_pos length to control
"FIXED: 110519  should match with \{6} \{3} only
"FIXED: 110519  set_buf add with mini mode
"FIXED: 110519  no history show while open with cursor word
"FIXED: 110519  color text format with rgb rgba rgb%
"FIXED: 110519  add with mini mode
"FIXED: 110519  Cannot display hueline if place hueline before draw_pal
" DONE: 110519  use with s:norm_pos to set the postition
" DONE: 110519  open window with current word
" DONE: 110519  draw_ValLine
" DONE: 110519  draw_SatLine
" DONE: 110519  don't add to history  whil color init  without hex
" DONE: 110519  copy text to clipboard
" DONE: 110519  change  current color word with color
" DONE: 110519  auto history list
"0.5.0
"FIXED: 110511  the V/S => col /line . use list to store
" DONE: 110511  use list to store hueline
"FIXED: 110510  show #FF0000 =>c-1 to set max S at 100
"FIXED: 110510  s:draw_pallet(h,l,c,...) the value /saturation => column /line
" DONE: 110510  use <cr> to edit
" DONE: 110510  show history_color
" DONE: 110510  #ff0000 not #fe0000 precise hue
" DONE: 110509  use tab to toggle
" DONE: 110509  draw_block /draw_multi_Block
" DONE: 110509  draw hue line

==============================================================================
LICENSE                                             *colorv-license*

    Copyright 2010-2011 Rykka Krn. All rights reserved.
    MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    }}}
==============================================================================
vim:tw=78:ft=help:
